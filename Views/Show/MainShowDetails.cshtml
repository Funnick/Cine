@model Show
@inject SignInManager<TheaterUser> _signInManager;

<div class="w-full overflow-hidden bg-fixed bg-cover bg-no-repeat">

    <div>
        <div>
            <h1 class="text-center font-bold text-5xl mt-8 tracking-wide relative">Discounts</h1>

            <div class="flex flex-row justify-center my-4 text-sm tracking-tight font-medium text-gray-700">
                <p class="mx-3">MLC</p>

                <!-- Toggle Button -->
                <label for="toggle" class="flex items-center cursor-pointer">
                    <!-- toggle -->
                    <div class="relative">
                        <!-- hidden input -->
                        <input id="toggle" type="checkbox" class="hidden" onclick="myFunction()" />
                        <!-- line -->
                        <div class="w-10 h-3 bg-gray-400 rounded-full shadow-inner"></div>
                        <!-- dot -->
                        <div class="toggle_dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0"></div>
                    </div>
                </label>

                <p class="mx-3">Chips</p>
            </div>

            <div class="flex flex-col md:flex-row md: gap-2 md:transform md:scale-75 lg:scale-100 justify-center">
                <div class="border rounded-lg  text-center p-5 mx-auto md:mx-0 my-2 md:my-6 bg-gray-100 font-medium z-10 shadow-lg">
                    <div class="">Regular</div>
                    <div id="Chips" class="font-bold text-6xl Chips hidden">@Model.PointsPrice</div>
                    <div id="MLC" class="font-bold text-6xl MLC">&dollar;@Model.Price </div>
                </div>
                @if (Model.Discount != null)
                {
                    <div class="border rounded-lg  text-center p-5 mx-auto md:mx-0 my-2 md:my-6 bg-gray-100 font-medium z-10 shadow-lg">
                        <div class="">@Model.Discount.Description</div>
                        <div id="Chips" class="font-bold text-6xl Chips hidden">@Model.PointsPrice</div>
                        <div id="MLC" class="font-bold text-2xl MLC">&dollar;@Model.Price</div>
                        <div class="text-6xl text-red-400 font-bold">@Model.Discount.Percent % OFF</div>
                    </div>
                }

            </div>
        </div>
        <div>
            <h1 class="text-center font-bold text-5xl mt-8 tracking-wide relative">@Model.Movie.Title</h1>
        </div>
        <div>
            <h1 class="text-center font-bold text-2xl mt-8 tracking-wide relative">Date: @Model.Date.ToString("D")</h1>
        </div>
        <div class="flex flex-row items-center gap-4 justify-center">
            <div>
                <h1 class="text-center font-bold text-2xl mt-8 tracking-wide relative">Start Time: @Model.StartTime.ToString("H:mm")</h1>
            </div>
            <div>
                <h1 class="text-center font-bold text-2xl mt-8 tracking-wide relative">End Time: @Model.EndTime.ToString("H:mm")</h1>
            </div>
        </div>
        <div class="m-4 tracking-wide bg-gray-100 rounded-lg p-5 shadow-inner">
            <p>
                @Model.Movie.Synopsis
            </p>
        </div>
        @if (_signInManager.IsSignedIn(User))
        {
            <div class="w-full mb-4 flex items-center justify-center">
                <button id="card_open" class="inline-block px-6 py-2 text-xs font-medium leading-6 text-center text-white uppercase transition bg-green-500 rounded shadow ripple hover:shadow-lg hover:bg-green-600 focus:outline-none">BUY TICKETS</button>
            </div>
        }
        else
        {
            <div class="w-full mb-4 flex items-center justify-center">
                <button  class="inline-block px-6 py-2 text-xs font-medium leading-6 text-center text-white uppercase transition bg-green-500 rounded shadow ripple hover:shadow-lg hover:bg-green-600 focus:outline-none">Log in for buy</button>
            </div>
        }

    </div>



    <div id="card_panel" class="main-modal fixed w-full inset-0 z-50 overflow-hidden flex justify-center items-center hidden">
        <div class="modal-container bg-white w-4/12 md:max-w-11/12 mx-auto rounded-xl z-50 overflow-y-auto">
            <div class="modal-content py-4 text-left px-6">
                <div class="flex justify-between items-center pb-3">
                    <p class="text-2xl font-bold text-gray-500">Select</p>
                    <div id="card_close" class="modal-close cursor-pointer z-50">
                        <svg class="fill-current text-gray-500" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18">
                            <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"></path>
                        </svg>
                    </div>
                </div>
                <form name="buy" method="post">
                    <div class="my-5 mr-5 ml-5 flex justify-center">

                        <div class="">

                            <h1 class="m-4">Seats</h1>
                            <div class="grid grid-cols-10 gap-6">
                                @{ int item = -1;}
                                @foreach (var seat in ViewBag.seats)
                                {
                                    item++;
                                    if (seat)
                                    {
                                        <input name="@item" type="checkbox" class="h-5 w-5 " />
                                    }
                                    else
                                    {
                                        <div  class="h-5 w-5 bg-black"></div>
                                    }
                                }
                            </div>
                            @if (Model.Discount != null)
                            {
                                <div>
                                    <h1>With Discount</h1>
                                    <input name="discount" type="number" class="border">
                                </div>
                            }

                        </div>
                        <input name="id" class="hidden" value="@Model.ShowId" />


                    </div>
                    <div class="flex justify-end pt-2 space-x-14">
                        <button type="submit" class="inline-block px-6 py-2 text-xs font-medium leading-6 text-center text-white uppercase transition bg-green-500 rounded shadow ripple hover:shadow-lg hover:bg-green-600 focus:outline-none">BUY TICKETS</button>
                    </div>
                </form>

            </div>
        </div>
    </div>

    <script>
        const card_open = document.getElementById('card_open')
        const card_close = document.getElementById('card_close')
        const card_panel = document.getElementById('card_panel')

        function modalState() {
            if (card_panel.classList.contains('hidden')) {
                // Show modal
                card_panel.classList.remove('hidden')
                card_panel.classList.add('block')

                // Delete button
                card_open.classList.add('hidden')
                card_open.classList.remove('block')

                // Start animation open
                card_panel.classList.add('card_open')
            } else {
                // Delete modal
                card_panel.classList.add('hidden')
                card_panel.classList.remove('block')

                // Show button
                card_open.classList.remove('hidden')
                card_open.classList.add('block')

                // Remove animation open
                card_panel.classList.remove('card_open')
            }
        }

        card_open.addEventListener('click', modalState)
        card_close.addEventListener('click', modalState)
    </script>
    <!--JS for toggle-->
    <script>
        function myFunction() {
            var x = document.querySelectorAll('.MLC');
            var y = document.querySelectorAll('.Chips');
            for (var i = 0; i < x.length; i++) {
                if (document.getElementById("toggle").checked == true) {
                    x[i].classList.add('hidden');
                    y[i].classList.remove('hidden');
                } else {
                    x[i].classList.remove('hidden');
                    y[i].classList.add('hidden');
                }
            }
        }
    </script>

</div>