@model GenericPaginator<Cine.Models.Movie>

@{
    ViewData["Title"] = "Movie";
}

<div class=" w-full">
    <div class="flex flex-col items-center justify-center">
        <p class="text-2xl text-center font-bold m-5">Films</p>
        <form name="search" method="post">
            <div class="flex  p-2 gap-4 shadow-2xl bg-white flex-col md:flex-row items-center justify-center">
                <div class="flex flex-row gap-2 items-center">
                    <h1>Search by:</h1>
                    <select name="search_by" class="appearance-none">
                        <option selected>Title</option>
                        <option>Country</option>
                        <option>Category</option>
                    </select>
                </div>
                <div class="flex flex-row gap-2 items-center">
                    <h1>Order by:</h1>
                    <select name="order_by" class="appearance-none">
                        <option selected>Title(Alphabetic)</option>
                        <option>Year</option>
                        <option>Duration</option>
                    </select>
                </div>
                <div>
                    <div class="relative mx-auto text-gray-600 ">
                        <input class="border-2 border-gray-300 bg-white h-10 pl-2 pr-8 rounded-lg text-sm focus:outline-none"
                               type="search" name="search" placeholder="Search">
                        <button type="submit" class="absolute right-0 top-0 mt-3 mr-2">
                            <svg class="text-gray-600 h-4 w-4 fill-current" xmlns="http://www.w3.org/2000/svg"
                                 version="1.1" id="Capa_1" x="0px" y="0px"
                                 viewBox="0 0 56.966 56.966" style="enable-background:new 0 0 ;"
                                 xml:space="preserve"
                                 width="512px" height="512px">
                            <path d="M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z" />
              </svg>
                        </button>
                    </div>
                </div>

            </div>
        </form>

        <table class="rounded-t-lg m-5 w-5/6 mx-auto bg-gray-200 text-gray-800">
            <tr class="text-left border-b-2 border-gray-300">
                <th class="px-4 py-3">Title</th>
                <th class="px-4 py-3">Genre</th>
                <th class="px-4 py-3">Duration</th>
                <th class="px-4 py-3">Country</th>
                <th class="px-4 py-3 ">Category</th>
                <th class="px-4 py-3">Year</th>
                <th class="px-4 py-3">Deatils</th>
            </tr>
            @foreach (var item in Model.Result)
            {
                string name = item.Title;
                name = name.Replace(" ", "");
                <tr class="bg-gray-100 border-b border-gray-200">
                    <th class="px-4 py-3">@item.Title</th>
                    <th class="px-4 py-3">@item.Genre</th>
                    <th class="px-4 py-3 hidden md:block">@item.Duration</th>
                    <th class="px-4 py-3">@item.Country</th>
                    <th class="px-4 py-3 ">@item.Category</th>
                    <th class="px-4 py-3 " >@item.Year</th>
                    <th class="px-4 py-3"><button onclick="openModal('@name-modal')">Moree</button></th>

                </tr>

            }

        </table>

        <div class="flex flex-col md:flex-row items-center justify-center py-2">
            @if (Model.Result.Count() > 0)
            {
                <div>
                    <span>
                        <strong>@Model.TotalRegistrys</strong> registros encontrados
                    </span>
                </div>
                <div>
                    <span>&nbsp;|&nbsp;</span>
                    <span>
                        Página <strong>@(Model.ActualPage)</strong> de
                        <strong>@Model.TotalPages</strong>
                    </span>
                    <span>&nbsp;|&nbsp;</span>
                </div>

            }
            else
            {
                <span>No hay resultados para esta búsqueda</span>
                <span>&nbsp;|&nbsp;</span>
            }
            <div>
                @if (Model.ActualPage > 1)
                {
                    @Html.ActionLink("<<", "Index", new { pagina = 1 },
                                    new { @class = "btn btn-sm btn-default" })
                    <span></span>
                    @Html.ActionLink("Anterior", "Index", new { pagina = Model.ActualPage - 1 },
                                    new { @class = "btn btn-sm btn-default" })
                }
                else
                {
                    @Html.ActionLink("<<", "Index", new { pagina = 1 },
                                    new { @class = "btn btn-sm btn-default disabled" })
                    <span></span>
                    @Html.ActionLink("Anterior", "Index", new { pagina = 1 },
                                    new { @class = "btn btn-sm btn-default disabled" })
                }
                <span></span>
                @if (Model.ActualPage < Model.TotalPages)
                {
                    @Html.ActionLink("Siguiente", "Index", new { pagina = Model.ActualPage + 1 },
                                    new { @class = "btn btn-sm btn-default" })
                    <span></span>
                    @Html.ActionLink(">>", "Index", new { pagina = Model.ActualPage },
                                    new { @class = "btn btn-sm btn-default" })
                }
                else
                {
                    @Html.ActionLink("Siguiente", "Index", new { pagina = Model.ActualPage - 1 },
                                    new { @class = "btn btn-sm btn-default disabled" })
                    <span></span>
                    @Html.ActionLink(">>", "Index", new { pagina = Model.ActualPage },
                                    new { @class = "btn btn-sm btn-default disabled" })
                }
            </div>

        </div>

    </div>
    <script>all_modals = []</script>
      
    @foreach (var item in Model.Result)
    {
        string name = item.Title;
        name = name.Replace(" ", "");
        
        <script> all_modals.push('@name-modal') </script>
        <div class="@name-modal fixed w-full inset-0 z-50 overflow-hidden flex justify-center items-center animated fadeIn faster">
            <div class="border border-black shadow-lg modal-container bg-gray-200  w-1/2 md:max-w-11/12 mx-auto rounded-xl shadow-lg z-50 overflow-y-auto" >
                <div class="modal-content py-4 text-left px-6  bg-cover bg-no-repeat" style="background-image:url('@item.Photo')">
                    <!--Title-->
                    <div class="flex justify-between items-center pb-3">
                        <h1 class="text-2xl font-bold text-black">Details</h1>
                        <div class="modal-close cursor-pointer z-50" onclick="modalClose('@name-modal')">
                            <svg class="fill-current text-gray-500" xmlns="http://www.w3.org/2000/svg" width="18" height="18"
                                 viewBox="0 0 18 18">
                                <path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z">
                                </path>
                            </svg>
                        </div>
                    </div>
                    <!--Body-->
                    <div class="justify-center ">
                        @await Html.PartialAsync("MovieView", item)
                    </div>
                    <!--Footer-->
                    <div class="flex justify-end pt-2 space-x-14">
                        <button class="px-4 bg-transparent p-3 rounded text-black hover:bg-gray-300 font-semibold" onclick="modalClose('@name-modal')">OK</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    all_modals.forEach((modal) => {
        const modalSelected = document.querySelector('.' + modal);
        modalSelected.classList.remove('fadeIn');
        modalSelected.classList.add('fadeOut');
        modalSelected.style.display = 'none';
    })
    const modalClose = (modal) => {
        const modalToClose = document.querySelector('.' + modal);
        modalToClose.classList.remove('fadeIn');
        modalToClose.classList.add('fadeOut');
        setTimeout(() => {
            modalToClose.style.display = 'none';
        }, 500);
    }

    const openModal = (modal) => {
        const modalToOpen = document.querySelector('.' + modal);
        modalToOpen.classList.remove('fadeOut');
        modalToOpen.classList.add('fadeIn');
        modalToOpen.style.display = 'flex';
    }

</script>
